plugins {
    id "java"
    id "application"
    id "org.jetbrains.kotlin.jvm" version "1.6.10"
    id "org.openjfx.javafxplugin" version "0.0.10"
    id "org.beryx.jlink" version "2.24.1"

    // Json
    id "org.jetbrains.kotlin.plugin.serialization" version "1.6.10"
}

group "com.yyil"
version "1.0-SNAPSHOT"

repositories {
    mavenCentral()
}

ext {
    junitVersion = "5.8.1"
}

sourceCompatibility = "16"
targetCompatibility = "16"

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

application {
    mainClass = "com.yyil.noteapp.NoteApplication"
}

[compileKotlin, compileTestKotlin].forEach {
    it.kotlinOptions {
        jvmTarget = "16"
    }
}

javafx {
    version = "16"
    modules = ["javafx.controls", "javafx.fxml", "javafx.web"]
}

dependencies {
    implementation("org.controlsfx:controlsfx:11.1.0")
    implementation("net.synedra:validatorfx:0.1.13") {
        exclude(group: "org.openjfx")
    }
    implementation("org.kordamp.ikonli:ikonli-javafx:12.2.0")
    implementation("eu.hansolo:tilesfx:11.48") {
        exclude(group: "org.openjfx")
    }

    // JSON
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2")

    // testing JavaFX
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    testImplementation("org.testfx:testfx-core:4.0.16-alpha")
    testImplementation("org.testfx:testfx-junit5:4.0.16-alpha")

    testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip") as RegularFile
    options = ["--strip-debug", "--compress", "2", "--no-header-files", "--no-man-pages"]
    launcher {
        name = "app"
    }
}

jlinkZip {
    group = "distribution"
}